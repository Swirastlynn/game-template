# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  plugins:
    - dart_code_metrics
    # - custom_lint   # I can create my own custom lint rules with this tool.
  exclude:
    - "build/**"
    - "bricks/**"
  language:
    strict-raw-types: true # https://dart.dev/guides/language/sound-problems#missing-type-arguments

  # Severity of the rules can be changed here (uncomment lines below):
  # errors:
  #   invalid_assignment: warning
  #   missing_return: error
  #   dead_code: info

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 10
    maximum-nesting-level: 3
    number-of-parameters: 4
    source-lines-of-code: 50
  metrics-exclude:
    - test/**
  rules:
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - no-equal-then-else

    - avoid-returning-widgets
    - prefer-correct-type-name:
        min-length: 2
        max-length: 40
    - prefer-correct-identifier-length:
        exceptions: [ 'i' ]
        max-identifier-length: 40
        min-identifier-length: 2
    - prefer-single-widget-per-file:
        ignore-private-widgets: true
    - member-ordering:
        order:
          - constructors
          - public-fields
          - private-fields
          - public-getters
          - private-getters
          - public-methods
          - private-methods
  rules-exclude:
    - test/**